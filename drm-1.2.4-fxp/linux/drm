#! /bin/sh

# drm - temporary wrapper script for .libs/drm
# Generated by ltmain.sh - GNU libtool 1.5.8 (1.1220.2.118 2004/08/07 12:24:38)
#
# The drm program cannot be directly executed until all the libtool
# libraries that it depends on are installed.
#
# This wrapper script should never be moved out of the build directory.
# If it is, it will not operate correctly.

# Sed substitution that helps us do robust quoting.  It backslashifies
# metacharacters that are still active within double-quoted strings.
Xsed='/bin/sed -e 1s/^X//'
sed_quote_subst='s/\([\\`\\"$\\\\]\)/\\\1/g'

# The HP-UX ksh and POSIX shell print the target directory to stdout
# if CDPATH is set.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

relink_command="(cd /scratch/rthakur/soc/lab1/drm-1.2.4-fxp/linux; { test -z \"\${LIBRARY_PATH+set}\" || unset LIBRARY_PATH || { LIBRARY_PATH=; export LIBRARY_PATH; }; }; { test -z \"\${COMPILER_PATH+set}\" || unset COMPILER_PATH || { COMPILER_PATH=; export COMPILER_PATH; }; }; { test -z \"\${GCC_EXEC_PREFIX+set}\" || unset GCC_EXEC_PREFIX || { GCC_EXEC_PREFIX=; export GCC_EXEC_PREFIX; }; }; { test -z \"\${LD_RUN_PATH+set}\" || unset LD_RUN_PATH || { LD_RUN_PATH=; export LD_RUN_PATH; }; }; LD_LIBRARY_PATH=\"/usr/local/packages/Imperas.20100528.0/bin/Linux:/usr/local/packages/Imperas.20100528.0/lib/Linux/External/lib\"; export LD_LIBRARY_PATH; PATH=\"/usr/sbin:/sbin:/usr/local/etc:/usr/local/packages/validation/bin:/usr/bin:/bin:/usr/X11R6/bin:/usr/local/bin:/usr/local/packages/Imperas.20100528.0/bin/Linux:/usr/local/packages/arm/arm-2008q1/bin\"; export PATH; g++ -m32 -fpermissive -pg -g -O3 -I/misc/scratch/rthakur/soc/lab1/drm-1.2.4-fxp/faad2/include -o \$progdir/\$file drm-SimulationParameters.o drm-DRMSignalIO.o drm-DataIO.o drm-DrmReceiver.o drm-DrmSimulation.o drm-DrmTransmitter.o drm-InputResample.o drm-MSCMultiplexer.o drm-OFDM.o drm-Parameter.o drm-TextMessage.o drm-AMDemodulation.o drm-DataDecoder.o drm-DABMOT.o drm-MOTSlideShow.o drm-Journaline.o drm-FAC.o drm-MatlibSigProToolbox.o drm-MatlibStdToolbox.o drm-CRC.o drm-Settings.o drm-Utilities.o drm-SDCReceive.o drm-SDCTransmit.o drm-ChannelEstimation.o drm-TimeLinear.o drm-TimeWiener.o drm-ChanEstTime.o drm-IdealChannelEstimation.o drm-ChannelSimulation.o drm-BlockInterleaver.o drm-SymbolInterleaver.o drm-BitInterleaver.o drm-ConvEncoder.o drm-EnergyDispersal.o drm-MLC.o drm-Metric.o drm-ViterbiDecoder.o drm-TrellisUpdateMMX.o drm-TrellisUpdateSSE2.o drm-QAMMapping.o drm-ChannelCode.o drm-CellMappingTable.o drm-OFDMCellMapping.o drm-Resample.o drm-AudioSourceDecoder.o drm-FreqSyncAcq.o drm-TimeSync.o drm-SyncUsingPil.o drm-TimeSyncTrack.o drm-main.o drm-sound.o  -L/misc/scratch/rthakur/soc/lab1/drm-1.2.4-fxp/faad2/libfaad/.libs /misc/scratch/rthakur/soc/lab1/drm-1.2.4-fxp/faad2/libfaad/.libs/libfaad.so -lm -Wl,--rpath -Wl,/misc/scratch/rthakur/soc/lab1/drm-1.2.4-fxp/faad2/libfaad/.libs -Wl,--rpath -Wl,/usr/local/lib)"

# This environment variable determines our operation mode.
if test "$libtool_install_magic" = "%%%MAGIC variable%%%"; then
  # install mode needs the following variable:
  notinst_deplibs=' /misc/scratch/rthakur/soc/lab1/drm-1.2.4-fxp/faad2/libfaad/.libs/libfaad.la'
else
  # When we are sourced in execute mode, $file and $echo are already set.
  if test "$libtool_execute_magic" != "%%%MAGIC variable%%%"; then
    echo="echo"
    file="$0"
    # Make sure echo works.
    if test "X$1" = X--no-reexec; then
      # Discard the --no-reexec flag, and continue.
      shift
    elif test "X`($echo '\t') 2>/dev/null`" = 'X\t'; then
      # Yippee, $echo works!
      :
    else
      # Restart under the correct shell, and then maybe $echo will work.
      exec /bin/sh "$0" --no-reexec ${1+"$@"}
    fi
  fi

  # Find the directory that this script lives in.
  thisdir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`
  test "x$thisdir" = "x$file" && thisdir=.

  # Follow symbolic links until we get to the real thisdir.
  file=`ls -ld "$file" | /bin/sed -n 's/.*-> //p'`
  while test -n "$file"; do
    destdir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`

    # If there was a directory component, then change thisdir.
    if test "x$destdir" != "x$file"; then
      case "$destdir" in
      [\\/]* | [A-Za-z]:[\\/]*) thisdir="$destdir" ;;
      *) thisdir="$thisdir/$destdir" ;;
      esac
    fi

    file=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
    file=`ls -ld "$thisdir/$file" | /bin/sed -n 's/.*-> //p'`
  done

  # Try to get the absolute directory name.
  absdir=`cd "$thisdir" && pwd`
  test -n "$absdir" && thisdir="$absdir"

  program=lt-'drm'
  progdir="$thisdir/.libs"

  if test ! -f "$progdir/$program" || \
     { file=`ls -1dt "$progdir/$program" "$progdir/../$program" 2>/dev/null | /bin/sed 1q`; \
       test "X$file" != "X$progdir/$program"; }; then

    file="$$-$program"

    if test ! -d "$progdir"; then
      mkdir "$progdir"
    else
      rm -f "$progdir/$file"
    fi

    # relink executable if necessary
    if test -n "$relink_command"; then
      if relink_command_output=`eval $relink_command 2>&1`; then :
      else
	echo "$relink_command_output" >&2
	rm -f "$progdir/$file"
	exit 1
      fi
    fi

    mv -f "$progdir/$file" "$progdir/$program" 2>/dev/null ||
    { rm -f "$progdir/$program";
      mv -f "$progdir/$file" "$progdir/$program"; }
    rm -f "$progdir/$file"
  fi

  if test -f "$progdir/$program"; then
    if test "$libtool_execute_magic" != "%%%MAGIC variable%%%"; then
      # Run the actual program with our arguments.

      exec $progdir/$program ${1+"$@"}

      $echo "$0: cannot exec $program ${1+"$@"}"
      exit 1
    fi
  else
    # The program doesn't exist.
    $echo "$0: error: $progdir/$program does not exist" 1>&2
    $echo "This script is just a wrapper for $program." 1>&2
    echo "See the libtool documentation for more information." 1>&2
    exit 1
  fi
fi
